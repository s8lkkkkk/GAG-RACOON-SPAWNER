-- Services
local Players = game:GetService('Players')
local LocalPlayer = Players.LocalPlayer
local UIS = game:GetService('UserInputService')
local RunService = game:GetService('RunService')

-- =================== GUI SETUP ===================
local g = Instance.new('ScreenGui', LocalPlayer:WaitForChild('PlayerGui'))
g.Name = 'PetGenUI'

local f = Instance.new('Frame', g)
f.Size = UDim2.new(0, 350, 0, 500)
f.Position = UDim2.new(0.5, -175, 0.5, -250)
f.BackgroundColor3 = Color3.fromRGB(0,0,0)
f.BackgroundTransparency = 0.7
f.Active = true
f.Draggable = true
f.BorderSizePixel = 0
f.ClipsDescendants = true

local fCorner = Instance.new("UICorner", f)
fCorner.CornerRadius = UDim.new(0,20)

-- Background Image
local bgImage = Instance.new("ImageLabel", f)
bgImage.Name = "BackgroundImage"
bgImage.Size = UDim2.new(1,0,1,0)
bgImage.Position = UDim2.new(0,0,0,0)
bgImage.BackgroundTransparency = 1
bgImage.ZIndex = 1
bgImage.Image = "rbxassetid://95162193003483"

-- Title
local titleLabel = Instance.new("TextLabel", f)
titleLabel.Size = UDim2.new(1,0,0,40)
titleLabel.Position = UDim2.new(0,0,0,0)
titleLabel.BackgroundColor3 = Color3.fromRGB(20,20,20)
titleLabel.BackgroundTransparency = 0.6
titleLabel.Text = "MSXLV PET SPAWNER"
titleLabel.TextColor3 = Color3.fromRGB(255,255,255)
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextScaled = true
titleLabel.ZIndex = 2
local titleCorner = Instance.new("UICorner", titleLabel)
titleCorner.CornerRadius = UDim.new(0,15)

-- =================== Twinkling Spots ===================
local numSpots = 50
local spots = {}
local twinkleEnabled = true
for i = 1, numSpots do
    local spot = Instance.new("Frame", f)
    spot.Size = UDim2.new(0,4,0,4)
    spot.Position = UDim2.new(math.random(),0,math.random(),0)
    spot.BackgroundColor3 = Color3.fromRGB(255,255,255)
    spot.BorderSizePixel = 0
    spot.BackgroundTransparency = math.random()
    table.insert(spots, spot)
end

task.spawn(function()
    while true do
        for _, spot in ipairs(spots) do
            if twinkleEnabled then
                spot.BackgroundTransparency = math.random()
            else
                spot.BackgroundTransparency = 1
            end
        end
        task.wait(0.1)
    end
end)

-- =================== TAB BUTTONS ===================
local tabFrame = Instance.new("Frame", f)
tabFrame.Size = UDim2.new(1,0,0,30)
tabFrame.Position = UDim2.new(0,0,0,40)
tabFrame.BackgroundTransparency = 1

local function makeTabButton(text, posX)
    local btn = Instance.new("TextButton", tabFrame)
    btn.Size = UDim2.new(0.33,0,1,0)
    btn.Position = UDim2.new(posX,0,0,0)
    btn.Text = text
    btn.TextColor3 = Color3.fromRGB(255,255,255)
    btn.Font = Enum.Font.SourceSansBold
    btn.TextScaled = true
    btn.BackgroundColor3 = Color3.fromRGB(0,0,0)
    btn.ZIndex = 2
    local c = Instance.new("UICorner", btn)
    c.CornerRadius = UDim.new(0,12)
    return btn
end

local petTabBtn = makeTabButton("Pets",0)
local bgTabBtn = makeTabButton("Backgrounds",0.33)
local miscTabBtn = makeTabButton("Misc",0.66)

-- =================== CONTENT FRAMES ===================
local petFrame = Instance.new("Frame", f)
petFrame.Size = UDim2.new(1,0,1,-70)
petFrame.Position = UDim2.new(0,0,0,70)
petFrame.BackgroundTransparency = 1
petFrame.Visible = true

local bgFrame = Instance.new("Frame", f)
bgFrame.Size = UDim2.new(1,0,1,-70)
bgFrame.Position = UDim2.new(0,0,0,70)
bgFrame.BackgroundTransparency = 1
bgFrame.Visible = false

local miscFrame = Instance.new("Frame", f)
miscFrame.Size = UDim2.new(1,0,1,-70)
miscFrame.Position = UDim2.new(0,0,0,70)
miscFrame.BackgroundTransparency = 1
miscFrame.Visible = false

-- Tab switching
local function switchTab(tab)
    petFrame.Visible = tab == "Pets"
    bgFrame.Visible = tab == "Backgrounds"
    miscFrame.Visible = tab == "Misc"

    petTabBtn.BackgroundTransparency = tab=="Pets" and 0.3 or 0.7
    bgTabBtn.BackgroundTransparency = tab=="Backgrounds" and 0.3 or 0.7
    miscTabBtn.BackgroundTransparency = tab=="Misc" and 0.3 or 0.7
end

petTabBtn.MouseButton1Click:Connect(function() switchTab("Pets") end)
bgTabBtn.MouseButton1Click:Connect(function() switchTab("Backgrounds") end)
miscTabBtn.MouseButton1Click:Connect(function() switchTab("Misc") end)

-- =================== PET SYSTEM ===================
local pets = {
    {'Raccoon','112383235077808','100522907734059'},
    {'Butterfly','PUT_BUTTERFLY_MESHID_HERE','PUT_BUTTERFLY_TEXTUREID_HERE'},
    {'Dragonfly','PUT_DRAGONFLY_MESHID_HERE','PUT_DRAGONFLY_TEXTUREID_HERE'}
}

local toggles = {}

local function setupPetBehavior(model, root, height)
    model.PrimaryPart = root
    local part = model:FindFirstChildOfClass("Part")
    local mesh = part:FindFirstChildOfClass("SpecialMesh")
    local centerPos = root.Position
    local areaRadius = 17
    local rotationSpeed = 2

    task.spawn(function()
        while true do
            local targetPos = Vector3.new(
                centerPos.X + math.random(-areaRadius*10, areaRadius*10)/10,
                height,
                centerPos.Z + math.random(-areaRadius*10, areaRadius*10)/10
            )

            local direction = (targetPos - part.Position)
            local distance = direction.Magnitude
            direction = direction.Unit

            local currentCFrame = part.CFrame
            local targetCFrame = CFrame.new(part.Position, Vector3.new(targetPos.X, part.Position.Y, targetPos.Z))
            local rotationTime = 0
            while rotationTime < 1 do
                part.CFrame = currentCFrame:Lerp(targetCFrame, rotationTime)
                rotationTime = rotationTime + rotationSpeed * 0.03
                task.wait(0.03)
            end
            part.CFrame = targetCFrame

            local steps = math.ceil(distance / 0.2)
            local stepAngle = 0
            for i = 1, steps do
                part.Position = part.Position + direction * 0.2
                if mesh then
                    stepAngle = stepAngle + math.rad(15)
                    mesh.Offset = Vector3.new(0, math.sin(stepAngle) * 0.1, 0)
                end
                task.wait(0.03)
            end
            task.wait(0.5)
        end
    end)
end

for i,v in ipairs(pets) do
    local name, meshId, textureId = v[1], v[2], v[3]
    local b = Instance.new('TextButton', petFrame)
    b.Size = UDim2.new(0.9,0,0,40)
    b.Position = UDim2.new(0.05,0,0,(i-1)*50)
    b.BackgroundColor3 = Color3.fromRGB(0,0,0)
    b.TextColor3 = Color3.fromRGB(255,255,255)
    b.Text = 'Start '..name
    b.Font = Enum.Font.GothamBold
    b.TextSize = 16
    local bCorner = Instance.new("UICorner", b)
    bCorner.CornerRadius = UDim.new(0,12)

    toggles[name] = false

    b.MouseButton1Click:Connect(function()
        toggles[name] = not toggles[name]
        b.Text = (toggles[name] and 'Stop' or 'Start')..' '..name

        if toggles[name] then
            task.spawn(function()
                while toggles[name] do
                    local weight = math.random(1100,1600)/100
                    local age = math.random(1,25)
                    local t = Instance.new('Tool')
                    t.Name = name.."\n["..string.format("%.2f",weight).." KG]\n[Age "..age.."]"
                    local h = Instance.new('Part')
                    h.Name = 'Handle'
                    h.Size = Vector3.new(2,2,2)
                    h.Parent = t
                    local mesh = Instance.new('SpecialMesh',h)
                    mesh.MeshType = Enum.MeshType.FileMesh
                    mesh.MeshId = 'rbxassetid://'..meshId
                    mesh.TextureId = 'rbxassetid://'..textureId
                    local baseSize = 2
                    local meshSize = baseSize + 0.25*(weight-10)
                    mesh.Scale = Vector3.new(meshSize,meshSize,meshSize)
                    t.Parent = LocalPlayer.Backpack

                    t.Activated:Connect(function()
                        local mouse = LocalPlayer:GetMouse()
                        local height = 4 + 0.1*(weight-10)
                        local position = Vector3.new(mouse.Hit.Position.X,height,mouse.Hit.Position.Z)
                        local model = Instance.new('Model')
                        model.Name = t.Name

                        local partClone = h:Clone()
                        partClone.Anchored = false
                        partClone.CanCollide = false
                        partClone.Position = position
                        partClone.Parent = model

                        local root = Instance.new('Part')
                        root.Name = 'HumanoidRootPart'
                        root.Size = Vector3.new(0.5,0.5,0.5)
                        root.Transparency = 1
                        root.Anchored = true
                        root.CanCollide = false
                        root.Position = position - Vector3.new(0,0,1)
                        root.Parent = model
                        model.PrimaryPart = root

                        local weld = Instance.new('WeldConstraint')
                        weld.Part0 = root
                        weld.Part1 = partClone
                        weld.Parent = root

                        model.Parent = workspace
                        t:Destroy()
                        setupPetBehavior(model, root, height)
                    end)
                    task.wait(0.2)
                end
            end)
        end
    end)
end

-- =================== BACKGROUND TAB ===================
local backgrounds = {
    {Name="Job Application", Id="rbxassetid://95162193003483"},
    {Name="Dark Angel", Id="rbxassetid://114754109151561"},
    {Name="Fisheye Street", Id="rbxassetid://90982760088133"},
    {Name="Dark Castles", Id="rbxassetid://76608212581528"},
    {Name="Bunnygirl Senpai", Id="rbxassetid://122626436561599"},
    {Name="Hell Cat", Id="rbxassetid://122950806652888"} -- Added
}

for i,bg in ipairs(backgrounds) do
    local b = Instance.new("TextButton", bgFrame)
    b.Size = UDim2.new(0.9,0,0,40)
    b.Position = UDim2.new(0.05,0,0,(i-1)*50)
    b.BackgroundColor3 = Color3.fromRGB(0,0,0)
    b.TextColor3 = Color3.fromRGB(255,255,255)
    b.Text = "Set "..bg.Name
    b.Font = Enum.Font.GothamBold
    b.TextSize = 16
    local bCorner = Instance.new("UICorner", b)
    bCorner.CornerRadius = UDim.new(0,12)
    b.MouseButton1Click:Connect(function()
        bgImage.Image = bg.Id
    end)
end

-- =================== MISC TAB ===================
-- WalkSpeed & JumpPower Sliders
local function createSlider(parent, name, min, max, default, posY, callback)
    local frame = Instance.new("Frame", parent)
    frame.Size = UDim2.new(0.9,0,0,50)
    frame.Position = UDim2.new(0.05,0,0,posY)
    frame.BackgroundColor3 = Color3.fromRGB(0,0,0)
    frame.ZIndex = 5
    local fCorner = Instance.new("UICorner", frame)
    fCorner.CornerRadius = UDim.new(0,12)

    local label = Instance.new("TextLabel", frame)
    label.Size = UDim2.new(1,0,0.4,0)
    label.Position = UDim2.new(0,0,0,0)
    label.Text = name..": "..default
    label.TextColor3 = Color3.fromRGB(255,255,255)
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.GothamBold
    label.TextScaled = true
    label.ZIndex = 6

    local sliderBG = Instance.new("Frame", frame)
    sliderBG.Size = UDim2.new(1,-20,0.4,0)
    sliderBG.Position = UDim2.new(0,10,0.6,0)
    sliderBG.BackgroundColor3 = Color3.fromRGB(80,80,80)
    sliderBG.ZIndex = 5
    local bgCorner = Instance.new("UICorner", sliderBG)
    bgCorner.CornerRadius = UDim.new(0,8)

    local handle = Instance.new("Frame", sliderBG)
    handle.Size = UDim2.new((default-min)/(max-min),1,1,0)
    handle.BackgroundColor3 = Color3.fromRGB(200,200,200)
    handle.ZIndex = 6
    local hCorner = Instance.new("UICorner", handle)
    hCorner.CornerRadius = UDim.new(0,6)

    local dragging = false
    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            input:CaptureMouse()
        end
    end)
    UIS.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    UIS.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local mouseX = UIS:GetMouseLocation().X - sliderBG.AbsolutePosition.X
            local percent = math.clamp(mouseX/sliderBG.AbsoluteSize.X,0,1)
            handle.Size = UDim2.new(percent,0,1,0)
            local value = min + percent*(max-min)
            label.Text = name..": "..math.floor(value)
            callback(value)
        end
    end)
end

local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local humanoid = character:FindFirstChildWhichIsA("Humanoid")

createSlider(miscFrame,"WalkSpeed",8,300,16,20,function(val)
    if humanoid then humanoid.WalkSpeed = val end
end)
createSlider(miscFrame,"JumpPower",50,500,50,90,function(val)
    if humanoid then humanoid.JumpPower = val end
end)

-- =================== WASD FLY ===================
local flying = false
local flySpeed = 50
local flyVel = Vector3.new(0,0,0)
local bodyVelocity

local function startFly()
    local char = LocalPlayer.Character
    if not char then return end
    local hrp = char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    flying = true
    bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(1e5,1e5,1e5)
    bodyVelocity.Velocity = Vector3.new(0,0,0)
    bodyVelocity.Parent = hrp

    local function updateFly()
        local dir = Vector3.new()
        if UIS:IsKeyDown(Enum.KeyCode.W) then dir = dir + hrp.CFrame.LookVector end
        if UIS:IsKeyDown(Enum.KeyCode.S) then dir = dir - hrp.CFrame.LookVector end
        if UIS:IsKeyDown(Enum.KeyCode.A) then dir = dir - hrp.CFrame.RightVector end
        if UIS:IsKeyDown(Enum.KeyCode.D) then dir = dir + hrp.CFrame.RightVector end
        if UIS:IsKeyDown(Enum.KeyCode.Space) then dir = dir + Vector3.new(0,1,0) end
        if UIS:IsKeyDown(Enum.KeyCode.LeftShift) then dir = dir - Vector3.new(0,1,0) end
        if dir.Magnitude > 0 then
            flyVel = dir.Unit * flySpeed
        else
            flyVel = Vector3.new(0,0,0)
        end
        bodyVelocity.Velocity = flyVel
    end

    RunService:BindToRenderStep("FlyStep",301,updateFly)
end

local function stopFly()
    flying = false
    if bodyVelocity then bodyVelocity:Destroy() bodyVelocity=nil end
    RunService:UnbindFromRenderStep("FlyStep")
end

local flyBtn = Instance.new("TextButton", miscFrame)
flyBtn.Size = UDim2.new(0.9,0,0,40)
flyBtn.Position = UDim2.new(0.05,0,0,160)
flyBtn.BackgroundColor3 = Color3.fromRGB(0,0,0)
flyBtn.TextColor3 = Color3.fromRGB(255,255,255)
flyBtn.Text = "Toggle Fly"
flyBtn.Font = Enum.Font.GothamBold
flyBtn.TextSize = 16
local flyCorner = Instance.new("UICorner", flyBtn)
flyCorner.CornerRadius = UDim.new(0,12)

flyBtn.MouseButton1Click:Connect(function()
    if flying then stopFly() else startFly() end
end)

-- Twinkle toggle
local twinkleBtn = Instance.new("TextButton", miscFrame)
twinkleBtn.Size = UDim2.new(0.9,0,0,40)
twinkleBtn.Position = UDim2.new(0.05,0,0,210)
twinkleBtn.BackgroundColor3 = Color3.fromRGB(0,0,0)
twinkleBtn.TextColor3 = Color3.fromRGB(255,255,255)
twinkleBtn.Text = "Toggle Twinkles"
twinkleBtn.Font = Enum.Font.GothamBold
twinkleBtn.TextSize = 16
local twinkleCorner = Instance.new("UICorner", twinkleBtn)
twinkleCorner.CornerRadius = UDim.new(0,12)
twinkleBtn.MouseButton1Click:Connect(function()
    twinkleEnabled = not twinkleEnabled
end)
