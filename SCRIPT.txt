local p = game:GetService('Players').LocalPlayer
local g = Instance.new('ScreenGui', p:WaitForChild('PlayerGui'))
g.Name = 'PetGenUI'

local f = Instance.new('Frame', g)
f.Size = UDim2.new(0, 260, 0, 160)
f.Position = UDim2.new(0.5, -130, 0.5, -80)
f.BackgroundColor3 = Color3.fromRGB(30,30,30)
f.Active = true
f.Draggable = true

local pets = {
    {'Raccoon', Color3.fromRGB(0,135,255), '112383235077808', '100522907734059'},
    {'Butterfly', Color3.fromRGB(255,100,200), 'PUT_BUTTERFLY_MESHID_HERE', 'PUT_BUTTERFLY_TEXTUREID_HERE'},
    {'Dragonfly', Color3.fromRGB(100,255,150), 'PUT_DRAGONFLY_MESHID_HERE', 'PUT_DRAGONFLY_TEXTUREID_HERE'}
}

local toggles = {}

for i, v in ipairs(pets) do
    local name, color, meshId, textureId = v[1], v[2], v[3], v[4]

    local b = Instance.new('TextButton', f)
    b.Size = UDim2.new(0.9,0,0,40)
    b.Position = UDim2.new(0.05,0,0,(i-1)*50+10)
    b.BackgroundColor3 = color
    b.Text = 'Start '..name
    b.TextColor3 = Color3.new(1,1,1)
    b.Font = Enum.Font.GothamBold
    b.TextSize = 16

    toggles[name] = false

    b.MouseButton1Click:Connect(function()
        toggles[name] = not toggles[name]
        b.Text = (toggles[name] and 'Stop' or 'Start')..' '..name

        if toggles[name] then
            task.spawn(function()
                while toggles[name] do
                    local w = math.random(1,25) -- weight
                    local a = math.random(1,25) -- age
                    local t = Instance.new('Tool')
                    t.Name = name..' ['..w..'KG] [Age '..a..']'

                    -- Handle
                    local h = Instance.new('Part')
                    h.Name = 'Handle'
                    h.Size = Vector3.new(2,2,2)
                    h.Transparency = 0
                    h.CanCollide = false
                    h.Parent = t

                    -- SpecialMesh for your pet
                    local mesh = Instance.new('SpecialMesh', h)
                    mesh.MeshType = Enum.MeshType.FileMesh
                    mesh.MeshId = 'rbxassetid://'..meshId
                    mesh.TextureId = 'rbxassetid://'..textureId

                    -- Dynamic scaling for Raccoon based on weight
                    if name == 'Raccoon' then
                        local minWeight, maxWeight = 1, 25
                        local minScale, maxScale = 1, 3
                        local scaled = minScale + (w - minWeight)/(maxWeight - minWeight) * (maxScale - minScale)
                        mesh.Scale = Vector3.new(scaled, scaled, scaled)
                    else
                        mesh.Scale = Vector3.new(2,2,2) -- default for other pets
                    end

                    t.Parent = p.Backpack
                    task.wait(0.2)
                end
            end)
        end
    end)
end
